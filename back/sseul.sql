-- MySQL Script generated by MySQL Workbench
-- Sat Jan 25 20:15:17 2020
-- Model: SSEUL    Version: 1.0

-- SISTEMA DE SEGUIMIENTO DE ESTUDIANTES EN LA UNIVERSIDAD LIBRE DE BOGOTA SEDE BOSQUE POPULAR

-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema sseul
-- -----------------------------------------------------
-- SISTEMA DE SEGUIMIENTO DE ESTUDIANTES EN LA UNIVERSIDAD LIBRE DE BOGOTA SEDE BOSQUE POPULAR

-- -----------------------------------------------------
-- Schema sseul
--
-- SISTEMA DE SEGUIMIENTO DE ESTUDIANTES EN LA UNIVERSIDAD LIBRE DE BOGOTA SEDE BOSQUE POPULAR
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `sseul` DEFAULT CHARACTER SET utf8 COLLATE utf8_bin ;
USE `sseul` ;

-- -----------------------------------------------------
-- Table `sseul`.`archivos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sseul`.`archivos` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Identificador y llave primaria del archivo',
  `nombre` VARCHAR(500) NOT NULL COMMENT 'Nombre del archivo',
  `cargado_por` VARCHAR(500) NOT NULL COMMENT 'Usuario del sistema quien carga el archivo',
  `created_at` TIMESTAMP NULL COMMENT 'Fecha y hora de creación',
  `updated_at` TIMESTAMP NULL COMMENT 'Fecha y hora de la última actualización',
  UNIQUE INDEX `uq_archivos_nombre` (`nombre` ASC) VISIBLE,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Almacena los archivos subidos al sistema';


-- -----------------------------------------------------
-- Table `sseul`.`facultades`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sseul`.`facultades` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Identificador y llave primaria',
  `codigo` VARCHAR(50) NOT NULL COMMENT 'Código de la facultad',
  `nombre` VARCHAR(100) NOT NULL COMMENT 'Nombre de la facultad',
  `esta_activa` TINYINT UNSIGNED NOT NULL DEFAULT 1 COMMENT 'Bandera que indica si la facultad se encuentra activa o no',
  `created_at` TIMESTAMP NULL COMMENT 'Fecha y hora de creación',
  `updated_at` TIMESTAMP NULL COMMENT 'Fecha y hora de la última actualización',
  `deleted_at` TIMESTAMP NULL COMMENT 'Fecha y hora de eliminación (eliminación lógica)',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Almacena las facultades';


-- -----------------------------------------------------
-- Table `sseul`.`programas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sseul`.`programas` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Identificador y llave priaria del progragrama académico',
  `facultad_id` INT UNSIGNED NOT NULL COMMENT 'Facultad a la que pertenece el programa académico',
  `codigo` VARCHAR(100) NOT NULL COMMENT 'Código del programa académico',
  `nombre` VARCHAR(500) NOT NULL COMMENT 'Nombre del programa académico',
  `esta_activo` TINYINT NOT NULL DEFAULT 1 COMMENT 'Bandera que indica si el programa si encuentra activo o no',
  `created_at` TIMESTAMP NULL COMMENT 'Fecha y hora de creación',
  `updated_at` TIMESTAMP NULL COMMENT 'Fecha y hora de la última actualización',
  `deleted_at` TIMESTAMP NULL COMMENT 'Fecha y hora de eliminación (eliminación lógica)',
  PRIMARY KEY (`id`),
  INDEX `fk_programas_facultades_facultadId_idx` (`facultad_id` ASC) VISIBLE,
  CONSTRAINT `fk_programas_facultades_facultadId`
    FOREIGN KEY (`facultad_id`)
    REFERENCES `sseul`.`facultades` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Almacena los programas por facultad';


-- -----------------------------------------------------
-- Table `sseul`.`cohortes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sseul`.`cohortes` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Indentificador y llave primaria del cohorte',
  `programa_id` INT UNSIGNED NOT NULL COMMENT 'Relación al programa académico',
  `codigo` VARCHAR(5) NOT NULL COMMENT 'Código del cohorte',
  `nombre` VARCHAR(50) NOT NULL COMMENT 'Nombre para mostrar del cohorte',
  `created_at` TIMESTAMP NULL COMMENT 'Fecha y hora de creación',
  `updated_at` TIMESTAMP NULL COMMENT 'Fecha y hora de la última actualización',
  `deleted_at` TIMESTAMP NULL COMMENT 'Fecha y hora de eliminación (eliminación lógica)',
  UNIQUE INDEX `uq_cohortes_codigo` (`codigo` ASC) VISIBLE,
  PRIMARY KEY (`id`),
  INDEX `fk_cohortes_programas_programaId_idx` (`programa_id` ASC) VISIBLE,
  CONSTRAINT `fk_cohortes_programas_programaId`
    FOREIGN KEY (`programa_id`)
    REFERENCES `sseul`.`programas` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Almacena los cohortes';


-- -----------------------------------------------------
-- Table `sseul`.`estudiantes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sseul`.`estudiantes` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Identificador y llave primaria del estudiante',
  `programa_id` INT UNSIGNED NOT NULL COMMENT 'Relación al programa académico',
  `cohorte_id` INT UNSIGNED NOT NULL COMMENT 'Relación al cohorte',
  `codigo` VARCHAR(100) NOT NULL COMMENT 'Código del estudiante',
  `nombre` VARCHAR(500) NOT NULL COMMENT 'Nombre del estudiante',
  `identificacion` VARCHAR(100) NOT NULL COMMENT 'Identificación del estudiante',
  `email` VARCHAR(500) NULL COMMENT 'Correo electrónico del estudiante',
  `movil` VARCHAR(20) NULL COMMENT 'Teléfono movil del estudiante',
  `estado` VARCHAR(50) NOT NULL DEFAULT 'Matriculado' COMMENT 'Estado del estudiante',
  `created_at` VARCHAR(45) NULL COMMENT 'Fecha y hora de creación',
  `updated_at` VARCHAR(45) NULL COMMENT 'Fecha y hora de la última actualización',
  `deleted_at` VARCHAR(45) NULL COMMENT 'Fecha y hora de eliminación (eliminación lógica)',
  PRIMARY KEY (`id`),
  INDEX `fk_estudiantes_programas_programaId_idx` (`programa_id` ASC) VISIBLE,
  INDEX `fk_estudiantes_cohortes_cohorteId_idx` (`cohorte_id` ASC) VISIBLE,
  CONSTRAINT `fk_estudiantes_programas_programaId`
    FOREIGN KEY (`programa_id`)
    REFERENCES `sseul`.`programas` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_estudiantes_cohortes_cohorteId`
    FOREIGN KEY (`cohorte_id`)
    REFERENCES `sseul`.`cohortes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Almacena los estudiantes';


-- -----------------------------------------------------
-- Table `sseul`.`password_resets`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sseul`.`password_resets` (
  `email` VARCHAR(500) NOT NULL,
  `token` VARCHAR(500) NULL,
  `created_at` TIMESTAMP NULL)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sseul`.`registros`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sseul`.`registros` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Identificador y llave primaria del registro',
  `archivo_id` INT UNSIGNED NOT NULL COMMENT 'Id del archivo dónde fue cargado',
  `cohorte_id` INT UNSIGNED NOT NULL COMMENT 'Id del cohorte',
  `programa_id` INT UNSIGNED NOT NULL COMMENT 'Id del programa académico',
  `estudiante_id` INT UNSIGNED NOT NULL COMMENT 'Id del estudiante',
  `codigo` VARCHAR(20) NOT NULL COMMENT 'Código del estudiante',
  `identificacion` VARCHAR(100) NOT NULL COMMENT 'Número de identificación del estudiante',
  `nombre` VARCHAR(500) NOT NULL COMMENT 'Nombre del estudiante',
  `email` VARCHAR(500) NULL COMMENT 'Correo electrónico del estudiante',
  `movil` VARCHAR(100) NULL COMMENT 'Teléfono movil del estudiante',
  `altura_semestral` INT(15) UNSIGNED NOT NULL COMMENT 'El semestre en el cual se encuentra el estudiante',
  `created_at` TIMESTAMP NULL COMMENT 'Fecha y hora de creación',
  `updated_at` TIMESTAMP NULL COMMENT 'Fecha y hora de la última actualización',
  PRIMARY KEY (`id`),
  INDEX `fk_registros_archivos_archivoId_idx` (`archivo_id` ASC) VISIBLE,
  INDEX `fk_registros_cohortes_cohorteId_idx` (`cohorte_id` ASC) VISIBLE,
  INDEX `fk_registros_programas_programaId_idx` (`programa_id` ASC) VISIBLE,
  INDEX `fk_registros_estudiantes_estudianteId_idx` (`estudiante_id` ASC) VISIBLE,
  CONSTRAINT `fk_registros_archivos_archivoId`
    FOREIGN KEY (`archivo_id`)
    REFERENCES `sseul`.`archivos` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_registros_cohortes_cohorteId`
    FOREIGN KEY (`cohorte_id`)
    REFERENCES `sseul`.`cohortes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_registros_programas_programaId`
    FOREIGN KEY (`programa_id`)
    REFERENCES `sseul`.`programas` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_registros_estudiantes_estudianteId`
    FOREIGN KEY (`estudiante_id`)
    REFERENCES `sseul`.`estudiantes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Almacena los registros subidos al sistema';


-- -----------------------------------------------------
-- Table `sseul`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `sseul`.`users` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(250) NOT NULL,
  `email` VARCHAR(500) NOT NULL,
  `email_verified_at` TIMESTAMP NULL,
  `password` VARCHAR(255) NOT NULL,
  `remember_token` VARCHAR(500) NULL,
  `created_at` TIMESTAMP NULL,
  `updated_at` TIMESTAMP NULL,
  `deleted_at` TIMESTAMP NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
